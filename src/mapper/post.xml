<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="Post">	
	<!-- post 공통 -->
	<insert id="insertPost" parameterType="postdto"> 
		insert into post (post_title, post_text, post_owner)
		values(#{postTitle}, #{postText}, #{postOwner})
	</insert>
	<update id="updateViewed" parameterType="_int">
		update post set post_viewed = post_viewed+1 
		where post_pk = #{postPk}
	</update>
	<update id="updatePost" parameterType="postdto">
		update post set post_title = #{postTitle}, post_text = #{postText}
		where post_pk = #{postPk}
	</update>
	<delete id="removePost" parameterType="_int">
		delete from post where post_pk = #{postPk}
	</delete>
	<select id="getLastPostPk" parameterType="_int" resultType="_int">
		select max(post_pk) from post where post_owner = #{postOwner}
	</select>
	<select id="getPostOwnerName" parameterType="_int" resultType="String">
		select adminname from admin
		join post on admin.admin_pk = post.post_owner
		where post.post_pk = #{postPk}
	</select>
	<select id="getPostRead" parameterType="_int" resultType="postdto">
		select post_pk as postPk, post_title as postTitle, post_text as postText
		from post
		where post_pk = #{postPk}
	</select>
	
	<!-- post_event -->
	<insert id="insertEvent" parameterType="eventdto">
		insert into post_event (event_started, event_ended, event_file, event_file_detail, post_pk)
		values(#{eventStarted}, #{eventEnded}, #{eventFile}, #{eventFileDetail}, #{postPk})
	</insert>
	<update id="updateEvent" parameterType="eventdto">
		update post_event set event_started = #{eventStarted}, event_ended = #{eventEnded}, event_file = #{eventFile}, event_file_detail = #{eventFileDetail}
		where post_pk = #{postPk}
	</update>
	<update id="removeEventFile" parameterType="_int">
		update post_event set event_file = 0
		where event_file = #{eventFile}
	</update>
	<update id="removeEventFileDetail" parameterType="_int">
		update post_event set event_file_detail = 0
		where event_file_detail = #{eventFileDetail}
	</update>
	<select id="getEventCnt" parameterType="String" resultType="_int">
		select count(*) from post_event		
		<if test="keyword != null">
			join post on post.post_pk = post_event.post_pk
			where post.post_pk = post_event.post_pk and post_title like(concat('%',#{keyword},'%'))
		</if>
	</select>
	<select id="getEventList" parameterType="hashmap" resultType="eventdto">
		select post_event.post_pk as postPk, post_title as postTitle, post_text as postText, post_owner as postOwner, post_created as postCreated, post_viewed as postViewed, event_pk as eventPk, event_started as eventStarted, event_ended as eventEnded, event_file as eventFile, event_file_detail as eventFileDetail, event_like as eventLike
		from post_event join post on post.post_pk = post_event.post_pk
		where post.post_pk = post_event.post_pk
		<if test="keyword != null">
			AND post_title like(concat('%',#{keyword},'%'))
		</if>
		<if test="sort != null">
			<choose>
				<when test="sort == 'new'">
					order by post.post_pk desc
				</when>
				<when test="sort == 'date'">
					order by post_event.event_ended asc
				</when>
				<when test="sort == 'hit'">
					order by post.post_viewed desc
				</when>
				<when test="sort == 'like'">
					order by post_event.event_like desc
				</when>
			</choose>
		</if>
		<if test="sort == null">
			order by post.post_pk desc
		</if>
		limit #{startRow},#{pageSize}
	</select>
	<select id="getEventRead" parameterType="_int" resultType="eventdto">
		select post_event.post_pk as postPk, post_title as postTitle, post_text as postText, post_owner as postOwner, post_created as postCreated, post_viewed as postViewed, event_pk as eventPk, event_started as eventStarted, event_ended as eventEnded, event_file as eventFile, event_file_detail as eventFileDetail, event_like as eventLike
		from post_event join post on post.post_pk = post_event.post_pk
		where event_pk = #{eventPk}
	</select>
	<select id="getLastEventPk" parameterType="_int" resultType="_int">
		select event_pk
		from post_event
		where post_pk = #{postPk}
	</select>
	
	<!-- event_like -->
	<select id="getLikeStatus" parameterType="hashmap" resultType="likedto">
		select event_like_pk as eventLikePk, event_like_post as eventLikePost, event_like_user as eventLikeUser
		from post_event_like
		where event_like_user = #{userPk} and event_like_post = #{eventPk}
	</select>
	<insert id="insertLikeStatus" parameterType="likedto">
		insert into post_event_like (event_like_post, event_like_user)
		values(#{eventLikePost}, #{eventLikeUser})
	</insert>
	<update id="upEventLike" parameterType="_int">
		update post_event set event_like = event_like+1 
		where event_pk = #{eventPk}
	</update>
	<update id="downEventLike" parameterType="_int">
		update post_event set event_like = event_like-1
		where event_pk = #{eventPk}
	</update>
	<delete id="removeLikeStatus" parameterType="_int">
		delete from post_event_like where event_like_pk = #{eventLikePk}
	</delete>
	
	<!-- post_notice -->
	<insert id="insertNotice" parameterType="noticedto">
		insert into post_notice (notice_pin, notice_file, post_pk)
		values(#{noticePin}, #{noticeFile}, #{postPk})
	</insert>
	<update id="updateNotice" parameterType="noticedto">
		update post_notice set notice_pin = #{noticePin}, notice_file = #{noticeFile}
		where post_pk = #{postPk}
	</update>
	<update id="removeNoticeFile" parameterType="_int">
		update post_notice set notice_file = 0
		where notice_file = #{noticeFile}
	</update>
	<select id="getNoticeCnt" parameterType="String" resultType="_int">
		select count(*) from post_notice
		<if test="keyword != null">
			join post on post.post_pk = post_notice.post_pk
			where post.post_pk = post_notice.post_pk and post_title like(concat('%',#{keyword},'%'))
		</if>
	</select>
	<select id="getNoticePinList" parameterType="_int" resultType="noticedto">
		select post_notice.post_pk as postPk, post_title as postTitle, post_text as postText, post_owner as postOwner, post_created as postCreated, post_viewed as postViewed, notice_pk as noticePk, notice_pin as noticePin, notice_file as noticeFile
		from post_notice 
		join post on post.post_pk = post_notice.post_pk
		where post.post_pk = post_notice.post_pk AND post_notice.notice_pin = 'Y'
		order by post.post_pk desc
		limit 0,#{pinCnt}
	</select>
	<select id="getNoticeList" parameterType="hashmap" resultType="noticedto">
		select post_notice.post_pk as postPk, post_title as postTitle, post_text as postText, post_owner as postOwner, post_created as postCreated, post_viewed as postViewed, notice_pk as noticePk, notice_pin as noticePin, notice_file as noticeFile
		from post_notice 
		join post on post.post_pk = post_notice.post_pk
		where post.post_pk = post_notice.post_pk AND post_notice.notice_pin = 'N'
		<if test="keyword != null">
			AND post_title like(concat('%',#{keyword},'%'))
		</if>
		order by post.post_pk desc 
		limit #{startRow},#{pageSize}
	</select>
	<select id="getNoticeRead" parameterType="_int" resultType="noticedto">
		select post_notice.post_pk as postPk, post_title as postTitle, post_text as postText, post_owner as postOwner, post_created as postCreated, post_viewed as postViewed, notice_pk as noticePk, notice_pin as noticePin, notice_file as noticeFile
		from post_notice 
		join post on post.post_pk = post_notice.post_pk
		where notice_pk = #{noticePk}
	</select>
	<select id="getPrevNotice" parameterType="_int" resultType="_int">
		select min(notice_pk) from post_notice
		where notice_pk <![CDATA[ > ]]> #{noticePk} and notice_pin ='N'
	</select>
	<select id="getNextNotice" parameterType="_int" resultType="_int">
		select max(notice_pk) from post_notice
		where notice_pk <![CDATA[ < ]]> #{noticePk} and notice_pin ='N'
	</select>
	<select id="getOwnerNamePin" parameterType="_int" resultType="String">
		select adminname
		from admin 
		join post on admin.admin_pk = post.post_owner
		join post_notice on post.post_pk = post_notice.post_pk
		where post.post_pk = post_notice.post_pk AND notice_pin ='Y'
		order by post.post_pk desc 
		limit 0,#{pinCnt}
	</select>
	<select id="getOwnerName" parameterType="hashmap" resultType="String">
		select adminname
		from admin 
		join post on admin.admin_pk = post.post_owner
		join post_notice on post.post_pk = post_notice.post_pk
		where post.post_pk = post_notice.post_pk AND notice_pin = 'N'
		<if test="keyword != null">
			AND post_title like(concat('%',#{keyword},'%'))
		</if>
		order by post.post_pk desc 
		limit #{startRow},#{pageSize}
	</select>
	
	<select id="getLastNoticePk" parameterType="_int" resultType="_int">
		select notice_pk
		from post_notice
		where post_pk = #{postPk}
	</select>
	<select id="getPinCnt" resultType="_int">
		select count(*)
		from post_notice
		where notice_pin = 'Y'
	</select>
</mapper>