<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="Post">	
	<!-- post 공통 -->
	<insert id="insertPost" parameterType="postdto"> 
		insert into post (post_title, post_text, post_owner)
		values(#{postTitle}, #{postText}, #{postOwner})
	</insert>
	<update id="updateViewed" parameterType="_int">
		update post set post_viewed = post_viewed+1 where post_pk = #{postPk}
	</update>
	<update id="updatePost" parameterType="postdto">
		update post set post_title = #{postTitle}, post_text = #{postText}
	</update>
	<delete id="removePost" parameterType="_int">
		delete from post where post_pk = #{postPk}
	</delete>
	<select id="getLastPostPk" parameterType="_int" resultType="_int">
		select max(post_pk) from post where post_owner = #{postOwner}
	</select>
	
	<!-- post_event -->
	<insert id="insertEvent" parameterType="eventdto">
		insert into post_event (event_started, event_ended, post_pk)
		values(#{eventStarted}, #{eventEnded}, #{postPk})
	</insert>
	<update id="updateEvent" parameterType="eventdto">
		update post_event set event_started = #{eventStarted}, event_ended = #{eventEnded}
	</update>
	<!-- 좋아요 수정 필요 -->
	<update id="updateEventLike" parameterType="_int">
		update post_event set event_like = event_like+1 where event_pk = #{eventPk}
	</update>
	<delete id="removeEvent" parameterType="_int">
		delete from post_event where event_pk = #{eventPk}
	</delete>
	<select id="getEventCnt" resultType="_int">
		select count(*) from post_event
	</select>
	<select id="getEventList" parameterType="hashmap" resultType="eventdto">
		select post_event.post_pk as postPk, post_title as postTitle, post_text as postText, post_owner as postOwner, post_created as postCreated, post_viewed as postViewed, event_pk as eventPk, event_started as eventStarted, event_ended as eventEnded, event_like as eventLike
		from post_event join post on post.post_pk = post_event.post_pk
		where post.post_pk = post_event.post_pk
		order by post.post_pk desc limit #{startRow},#{pageSize}
	</select>
	<select id="getEventListWithKey" parameterType="hashmap" resultType="eventdto">
		select post_event.post_pk as postPk, post_title as postTitle, post_text as postText, post_owner as postOwner, post_created as postCreated, post_viewed as postViewed, event_pk as eventPk, event_started as eventStarted, event_ended as eventEnded, event_like as eventLike
		from post_event join post on post.post_pk = post_event.post_pk
		where post.post_pk = post_event.post_pk and post_title like(concat('%',#{keyword},'%'))
		order by post.post_pk desc limit #{startRow},#{pageSize}
	</select>
	<select id="getEventRead" parameterType="_int" resultType="eventdto">
		select post_event.post_pk as postPk, post_title as postTitle, post_text as postText, post_owner as postOwner, post_created as postCreated, post_viewed as postViewed, event_pk as eventPk, event_started as eventStarted, event_ended as eventEnded, event_like as eventLike
		from post_event join post on post.post_pk = post_event.post_pk
		where event_pk = #{eventPk}
	</select>
	<!-- post_notice -->
	<insert id="insertNotice" parameterType="noticedto">
		insert into post_notice (notice_pin, post_pk)
		values(#{noticePin}, #{postPk})
	</insert>
	<update id="updateNotice" parameterType="noticedto">
		update post_notice set notice_pin = #{noticePin}
	</update>
	<delete id="removeNotice" parameterType="_int">
		delete from post_notice where notice_pk = #{noticePk}
	</delete>
	<select id="getNoticeCnt" resultType="_int">
		select count(*) from post_notice
	</select>
	<select id="getNoticeList" parameterType="hashmap" resultType="noticedto">
		select post_notice.post_pk as postPk, post_title as postTitle, post_text as postText, post_owner as postOwner, post_created as postCreated, post_viewed as postViewed, notice_pk as noticePk, notice_pin as noticePin
		from post_notice join post on post.post_pk = post_notice.post_pk
		where post.post_pk = post_notice.post_pk
		order by notice_pin asc, post.post_pk desc limit #{startRow},#{pageSize}
	</select>
	<select id="getNoticeListWithKey" parameterType="hashmap" resultType="noticedto">
		select post_notice.post_pk as postPk, post_title as postTitle, post_text as postText, post_owner as postOwner, post_created as postCreated, post_viewed as postViewed, notice_pk as noticePk, notice_pin as noticePin
		from post_notice join post on post.post_pk = post_notice.post_pk
		where post.post_pk = post_notice.post_pk and post_title like(concat('%',#{keyword},'%'))
		order by notice_pin asc, post.post_pk desc limit #{startRow},#{pageSize}
	</select>
	<select id="getNoticeRead" parameterType="_int" resultType="noticedto">
		select post_notice.post_pk as postPk, post_title as postTitle, post_text as postText, post_owner as postOwner, post_created as postCreated, post_viewed as postViewed, notice_pk as noticePk, notice_pin as noticePin
		from post_notice join post on post.post_pk = post_notice.post_pk
		where notice_pk = #{noticePk}
	</select>
</mapper>